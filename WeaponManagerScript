using UnityEngine;
using System.Collections;


public class WeaponManagerScript : MonoBehaviour {

	public float health = 100;
	//Variables
	public GameObject[] weapons;
	public int currentWeapon;


	public bool held;

	//UI Variables
	//public UnityEngine.UI.Text currentWeaponUI;
	//UI Stuff
	public UnityEngine.UI.Image crosshair;
	public UnityEngine.UI.Text ammoUI;


	void UpdateUI()
	{
		ammoUI.text = "Ammo: " + weapons [currentWeapon].GetComponent<GunShootScript> ().ammo +"/"+weapons [currentWeapon].GetComponent<GunShootScript> ().storedAmmo ;
	}
	// Use this for initialization
	void Start () {
		UpdateUI ();
		SwitchToCurrentWeapon ();
	}
	
	// Update is called once per frame
	void Update () {
		crosshair.transform.position = new Vector2(Input.mousePosition.x,Input.mousePosition.y);
		int pseudoWeapon = currentWeapon;

		if (Input.GetKeyDown ("1")) 
		{
			if (pseudoWeapon < weapons.Length - 1) 
			{
				pseudoWeapon += 1;
			}
			else if(pseudoWeapon == weapons.Length - 1)
			{
				pseudoWeapon = 0;
			}
			currentWeapon = pseudoWeapon;
			SwitchToCurrentWeapon ();

		}


		GunShootScript gunShootScript = weapons [currentWeapon].GetComponent<GunShootScript>();

		if(Input.GetMouseButtonDown(0))
		{
			if(gunShootScript)
			{
				if(gunShootScript.automatic == true)
				{
					held = true;
				}
				else if(gunShootScript.automatic == false)
				{
					weapons[currentWeapon].SendMessage("Fire", null, SendMessageOptions.DontRequireReceiver);
				}

			}
		}

		if(Input.GetMouseButtonUp(0))
		{

			if(gunShootScript)
			{
				if(gunShootScript.automatic == true)
				{
					held = false;
				}

			}
		}


	}

	void SwitchToCurrentWeapon()
	{
		for (int weaponCount = 0; weaponCount < weapons.Length; weaponCount++)
		{
			if (weaponCount != currentWeapon) 
			{
				weapons [weaponCount].SetActive (false);
			}
			else if (weaponCount == currentWeapon) 
			{
				weapons [weaponCount].SetActive (true);

			}
		}
	}


	void FixedUpdate()
	{
		UpdateUI ();
	}
	void AddWeapon(GameObject item)
	{

		GameObject[] tempWeapons = new GameObject[weapons.Length + 1];
		weapons.CopyTo(tempWeapons,0);
		tempWeapons[weapons.Length] = item;

		weapons = tempWeapons;



	}

}
